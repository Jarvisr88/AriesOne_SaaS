config:
  target: "http://localhost:8000"
  phases:
    - duration: 60
      arrivalRate: 5
      rampTo: 50
      name: "Warm up"
    - duration: 300
      arrivalRate: 50
      name: "Sustained load"
    - duration: 60
      arrivalRate: 50
      rampTo: 100
      name: "Peak load"
  defaults:
    headers:
      Content-Type: "application/json"
  processor: "./functions.js"

scenarios:
  - name: "User flow"
    flow:
      # Register user
      - post:
          url: "/auth/register"
          beforeRequest: "generateUser"
          json:
            email: "{{ email }}"
            password: "{{ password }}"
            first_name: "{{ firstName }}"
            last_name: "{{ lastName }}"
          capture:
            - json: "$.email"
              as: "userEmail"
          expect:
            - statusCode: 200

      # Login
      - post:
          url: "/auth/token"
          form:
            username: "{{ userEmail }}"
            password: "{{ password }}"
          capture:
            - json: "$.access_token"
              as: "token"
          expect:
            - statusCode: 200

      # Create tenant
      - post:
          url: "/tenants"
          beforeRequest: "setAuthHeader"
          beforeRequest: "generateTenant"
          json:
            name: "{{ tenantName }}"
            slug: "{{ tenantSlug }}"
            subscription_plan: "premium"
          capture:
            - json: "$.id"
              as: "tenantId"
          expect:
            - statusCode: 200

      # Create inventory items
      - loop:
          - post:
              url: "/inventory"
              beforeRequest: "setAuthHeader"
              beforeRequest: "generateInventoryItem"
              json:
                name: "{{ itemName }}"
                description: "{{ itemDescription }}"
                category: "equipment"
                status: "available"
                quantity: "{{ itemQuantity }}"
                unit_price: "{{ itemPrice }}"
                tenant_id: "{{ tenantId }}"
              capture:
                - json: "$.id"
                  as: "itemId"
              expect:
                - statusCode: 200
        count: 5

      # List inventory
      - get:
          url: "/inventory"
          beforeRequest: "setAuthHeader"
          expect:
            - statusCode: 200

      # Create order
      - post:
          url: "/orders"
          beforeRequest: "setAuthHeader"
          beforeRequest: "generateOrder"
          json:
            customer_name: "{{ customerName }}"
            customer_email: "{{ customerEmail }}"
            shipping_address: "{{ address }}"
            billing_address: "{{ address }}"
            status: "pending"
            tenant_id: "{{ tenantId }}"
            items:
              - inventory_item_id: "{{ itemId }}"
                quantity: "{{ orderQuantity }}"
                unit_price: "{{ itemPrice }}"
                discount: "{{ discount }}"
          expect:
            - statusCode: 200

      # List orders
      - get:
          url: "/orders"
          beforeRequest: "setAuthHeader"
          expect:
            - statusCode: 200

      # Refresh token
      - post:
          url: "/auth/refresh"
          beforeRequest: "setAuthHeader"
          json:
            refresh_token: "{{ token }}"
          capture:
            - json: "$.access_token"
              as: "token"
          expect:
            - statusCode: 200
